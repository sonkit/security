/*
 * File: app/controller/UserRoleController.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Security.controller.UserRoleController', {
    extend: 'Ext.app.Controller',

    stores: [
        'User',
        'Role'
    ],
    views: [
        'UserRolePanel',
        'RoleListWin'
    ],

    userGridItemClick: function(dataview, record, item, index, e, eOpts) {
        var userId = record.get('id'),
            roleGrid = Ext.ComponentQuery.query('userrolepanel').pop().child('rolegrid'),
            roleStore = roleGrid.getStore();

        roleStore.getProxy().url = 'roles/findByUserId';
        roleStore.getProxy().setExtraParam('userId', userId);

        roleStore.load();
    },

    removeRolesFromUser: function(button, e, eOpts) {
        var userrolepanel = Ext.ComponentQuery.query('userrolepanel').pop(),
            userGrid = userrolepanel.child('usergrid'),
            roleGrid = userrolepanel.child('rolegrid'),
            userSm = userGrid.getSelectionModel(),
            roleSm = roleGrid.getSelectionModel();

        if (roleSm.hasSelection()) {

            var userId = userSm.getLastSelected().get('id'),
                roles = roleSm.getSelection(),
                roleIds = [];


            Ext.each(roles, function(role) {
                roleIds.push(role.get('id'));
            });

            Ext.Ajax.request({
                url: 'users/removeRolesFromUser',
                method: 'PUT',
                params: {
                    'userId': userId,
                    'roleIds': roleIds
                },
                success: function(response, opts) {
                    roleGrid.getStore().reload();
                }
            });

        }
    },

    openRoleListWin: function(button, e, eOpts) {
        Ext.widget('rolelistwin').show(button);
    },

    addRolesToUser: function(button, e, eOpts) {
        var userrolepanel = Ext.ComponentQuery.query('userrolepanel').pop(),
            userGrid = userrolepanel.child('usergrid'),
            roleGrid = userrolepanel.child('rolegrid'),
            roleListWin = Ext.ComponentQuery.query('rolelistwin').pop(),
            roleGrid2 = roleListWin.child('gridpanel'),
            userSm = userGrid.getSelectionModel(),
            roleSm = roleGrid2.getSelectionModel();

        if (roleSm.hasSelection()) {

            var userId = userSm.getLastSelected().get('id'),
                roles = roleSm.getSelection(),
                roleIds = [];


            Ext.each(roles, function(role) {
                roleIds.push(role.get('id'));
            });

            Ext.Ajax.request({
                url: 'users/addRolesToUser',
                method: 'PUT',
                params: {
                    'userId': userId,
                    'roleIds': roleIds
                },
                success: function(response, opts) {
                    roleListWin.close();
                    roleGrid.getStore().reload();
                }
            });

        }
    },

    init: function(application) {
        this.control({
            "userrolepanel > usergrid": {
                itemclick: this.userGridItemClick
            },
            "userrolepanel > rolegrid button[text='删除']": {
                click: this.removeRolesFromUser
            },
            "userrolepanel > rolegrid button[text='添加']": {
                click: this.openRoleListWin
            },
            "rolelistwin button[text='确定']": {
                click: this.addRolesToUser
            }
        });
    }

});
